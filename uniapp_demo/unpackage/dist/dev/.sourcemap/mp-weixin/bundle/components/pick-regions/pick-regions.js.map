{"version":3,"sources":["webpack:////Users/wangyunzhu/Desktop/yinjiangtao/uniapp_demo/uniapp_demo/bundle/components/pick-regions/pick-regions.vue?c716","webpack:////Users/wangyunzhu/Desktop/yinjiangtao/uniapp_demo/uniapp_demo/bundle/components/pick-regions/pick-regions.vue?8a9f","webpack:////Users/wangyunzhu/Desktop/yinjiangtao/uniapp_demo/uniapp_demo/bundle/components/pick-regions/pick-regions.vue?1d63","webpack:////Users/wangyunzhu/Desktop/yinjiangtao/uniapp_demo/uniapp_demo/bundle/components/pick-regions/pick-regions.vue?f863","uni-app:///bundle/components/pick-regions/pick-regions.vue"],"names":["renderjs","component","options","__file","components","render","_vm","this","_h","$createElement","_self","_c","recyclableRender","staticRenderFns","_withStripped","props","defaultRegions","type","default","defaultRegionCode","defaultRegion","data","cityArr","districtArr","multiIndex","isInitMultiArray","watch","handler","oldRegion","console","immediate","computed","multiArray","pickedArr","CHINA_REGIONS","methods","handleColumnChange","that","handleValueChange","index0","index1","index2","arr0","arr1","arr2","handleDefaultRegion","children"],"mappings":"6IAAA,+HACIA,EADJ,QAQIC,EAAY,qBACd,aACA,YACA,sBACA,EACA,KACA,KACA,MACA,EACA,gBACAD,GAGFC,EAAUC,QAAQC,OAAS,kDACZ,aAAAF,E,2CCtBf,wQ,kCCAA,IAAIG,EAAJ,0LACA,IAAIC,EAAS,WACX,IAAIC,EAAMC,KACNC,EAAKF,EAAIG,eACJH,EAAII,MAAMC,IAEjBC,GAAmB,EACnBC,EAAkB,GACtBR,EAAOS,eAAgB,G,kCCRvB,0HAAw3B,eAAG,G,6HCW33B,YACA,CACAC,OACAC,gBACAC,WACAC,mBACA,WAGAC,mBACAF,aAEAG,8BAEAC,gBACA,OACAC,oBACAC,kCACAC,mBACAC,sBAGAC,OACAN,eACAO,sBACA,kBAEAC,QACA,yBACA,6BAEA,eACA,4BAEAC,oCAGAC,eAGAC,UACAC,sBACA,sFAEAC,qBAEA,6BACA,CACAC,EACAA,YACAA,uBAGA,oCAGAC,SACAC,+BAEA,yBACA,WACA,kBACA,iBACAC,kBACA,IACA,UACA,OACA,wCACAA,6CACA,MAEAA,oCACAA,gEACA,MACA,OACAA,gEACA,MACA,OACA,OAEA,SAEAA,oDAIAC,8BAEA,sCAAAC,OAAAC,OAAAC,OACA,kCAAAC,OAAAC,OAAAC,OACA,mBAEA,2BAEAC,gCACA,wBACA,yBAEA,IADA,QACA,YACA,4BACA,+DACA,MAGAC,cACA,KACA,eACA,OACA,oBAEA,+BAEA,MAIA,sBACA,8BAOA","file":"bundle/components/pick-regions/pick-regions.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./pick-regions.vue?vue&type=template&id=5ffbeea5&\"\nvar renderjs\nimport script from \"./pick-regions.vue?vue&type=script&lang=js&\"\nexport * from \"./pick-regions.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"bundle/components/pick-regions/pick-regions.vue\"\nexport default component.exports","export * from \"-!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./pick-regions.vue?vue&type=template&id=5ffbeea5&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./pick-regions.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./pick-regions.vue?vue&type=script&lang=js&\"","<template>\n    <picker mode=\"multiSelector\" \n            :value=\"multiIndex\" \n            :range=\"multiArray\" \n            @change=\"handleValueChange\"\n            @columnchange=\"handleColumnChange\">\n        <slot></slot>\n    </picker>\n</template>\n\n<script>\n    const CHINA_REGIONS = require('./regions.json')\n\texport default {\n        props:{\n            defaultRegions:{\n                type:Array,\n                default(){\n                    return []\n                }\n            },\n            defaultRegionCode:{\n                type:String\n            },\n            defaultRegion:[String,Array]\n        },\n\t\tdata() {\n\t\t\treturn {\n                cityArr:CHINA_REGIONS[0].childs,\n                districtArr:CHINA_REGIONS[0].childs[0].childs,\n                multiIndex: [0, 0, 0],\n                isInitMultiArray:true,\n\t\t\t}\n\t\t},\n        watch:{\n            defaultRegion:{\n                handler(region,oldRegion){\n                    if(Array.isArray(region)){\n                        // 避免传的是字面量的时候重复触发\n                        oldRegion = oldRegion || []\n                        if(region.join('')!==oldRegion.join('')){\n                            this.handleDefaultRegion(region)\n                        }\n                    }else if(region&&region.length == 6){\n                        this.handleDefaultRegion(region)\n                    }else{\n                        console.warn('defaultRegion非有效格式')\n                    }\n                },\n                immediate:true,\n            }\n        },\n        computed:{\n            multiArray(){\n                return this.pickedArr.map(arr=>arr.map(item=>item.name))\n            },\n            pickedArr(){\n                // 进行初始化\n                if(this.isInitMultiArray){\n                    return [\n                        CHINA_REGIONS,\n                        CHINA_REGIONS[0].childs,\n                        CHINA_REGIONS[0].childs[0].childs\n                    ]\n                }\n                return [CHINA_REGIONS,this.cityArr,this.districtArr];\n            }\n        },\n\t\tmethods: {\n            handleColumnChange(e){\n                // console.log(e);\n                this.isInitMultiArray = false;\n                const that = this;\n                let col = e.detail.column;\n                let row = e.detail.value;\n                that.multiIndex[col] = row;\n                try{\n                    switch(col){\n                        case 0:\n                            if(CHINA_REGIONS[that.multiIndex[0]].childs.length==0){\n                                that.cityArr = that.districtArr = [CHINA_REGIONS[that.multiIndex[0]]]\n                                break;\n                            }\n                            that.cityArr = CHINA_REGIONS[that.multiIndex[0]].childs\n                            that.districtArr = CHINA_REGIONS[that.multiIndex[0]].childs[that.multiIndex[1]].childs\n                            break;\n                        case 1:\n                            that.districtArr = CHINA_REGIONS[that.multiIndex[0]].childs[that.multiIndex[1]].childs\n                            break;\n                        case 2:\n                            break;\n                    }\n                }catch(e){\n                    // console.log(e);\n                    that.districtArr = CHINA_REGIONS[that.multiIndex[0]].childs[0].childs\n                }\n                \n            },\n            handleValueChange(e){\n                // 结构赋值\n                let [index0,index1,index2] = e.detail.value;\n                let [arr0,arr1,arr2] = this.pickedArr;\n                let address = [arr0[index0],arr1[index1],arr2[index2]];\n                // console.log(address);\n                this.$emit('getRegion',address)\n            },\n            handleDefaultRegion(region){\n                const isCode = !Array.isArray(region)\n                this.isInitMultiArray = false;\n                let children = CHINA_REGIONS\n                for(let i=0;i<3;i++){\n                    for(let j=0;j<children.length;j++){\n                       let condition = isCode?children[j].code==region.slice(0,(i+1)*2):children[j].name.includes(region[i]);\n                       if(condition){\n                           // 匹配成功进行赋值\n                           // console.log(i,j,children.length-1);\n                           children = children[j].childs;\n                           if(i==0){\n                               this.cityArr = children\n                           }else if(i==1){\n                               this.districtArr = children\n                           }\n                           this.$set(this.multiIndex,i,j)\n                           // console.log(this.multiIndex);\n                           break;\n                       }else{\n                           // 首次匹配失败就用默认的初始化\n                           // console.log(i,j,children.length-1);\n                           if(i==0 && j==(children.length-1)){\n                               this.isInitMultiArray = true;\n                           }\n                       }\n                    }\n                }\n            }\n\t\t},\n\t}\n</script>\n"],"sourceRoot":""}