{"version":3,"sources":["uni-app:///sheep/utils/qrcode.js"],"names":["uQRCode","QR8bitByte","data","this","mode","QRMode","MODE_8BIT_BYTE","QRCode","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","Array","prototype","getLength","buffer","length","write","i","put","charCodeAt","addData","newData","push","isDark","row","col","Error","getModuleCount","make","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","totalDataCount","dataCount","QRUtil","getLengthInBits","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","y","x","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","j","bits","getBCHTypeNumber","mod","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","QRPolynomial","modPoly","modIndex","get","totalCodeCount","index","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","QRErrorCorrectLevel","L","M","Q","H","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","errorCorrectLength","a","multiply","QRMath","gexp","type","qrCode","sameCount","count","darkCount","ratio","abs","glog","n","LOG_TABLE","EXP_TABLE","num","shift","undefined","utf16To8","text","result","charAt","String","fromCharCode","e","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","bufIndex","bit","defaults","size","margin","backgroundColor","foregroundColor","fileType","options","Promise","reslove","reject","defaultOptions","canvasId","componentInstance","createCanvas","qrcode","ctx","uni","createCanvasContext","setFillStyle","fillRect","tileW","tileH","style","round","w","ceil","h","setTimeout","draw","canvasToTempFilePath","width","height","destWidth","destHeight","success","res","resData","tempFilePath","getFileSystemManager","readFile","filePath","encoding","fail","error","complete","console"],"mappings":"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","file":"bundle_b/common/vendor.js","sourcesContent":["// uqrcode.js\n//---------------------------------------------------------------------\n// github https://github.com/Sansnn/uQRCode\n//---------------------------------------------------------------------\n \nlet uQRCode = {};\n \n(function() {\n\t//---------------------------------------------------------------------\n\t// QRCode for JavaScript\n\t//\n\t// Copyright (c) 2009 Kazuhiko Arase\n\t//\n\t// URL: http://www.d-project.com/\n\t//\n\t// Licensed under the MIT license:\n\t//   http://www.opensource.org/licenses/mit-license.php\n\t//\n\t// The word \"QR Code\" is registered trademark of \n\t// DENSO WAVE INCORPORATED\n\t//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n\t//\n\t//---------------------------------------------------------------------\n \n\t//---------------------------------------------------------------------\n\t// QR8bitByte\n\t//---------------------------------------------------------------------\n \n\tfunction QR8bitByte(data) {\n\t\tthis.mode = QRMode.MODE_8BIT_BYTE;\n\t\tthis.data = data;\n\t}\n \n\tQR8bitByte.prototype = {\n \n\t\tgetLength: function(buffer) {\n\t\t\treturn this.data.length;\n\t\t},\n \n\t\twrite: function(buffer) {\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\t// not JIS ...\n\t\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\n\t\t\t}\n\t\t}\n\t};\n \n\t//---------------------------------------------------------------------\n\t// QRCode\n\t//---------------------------------------------------------------------\n \n\tfunction QRCode(typeNumber, errorCorrectLevel) {\n\t\tthis.typeNumber = typeNumber;\n\t\tthis.errorCorrectLevel = errorCorrectLevel;\n\t\tthis.modules = null;\n\t\tthis.moduleCount = 0;\n\t\tthis.dataCache = null;\n\t\tthis.dataList = new Array();\n\t}\n \n\tQRCode.prototype = {\n \n\t\taddData: function(data) {\n\t\t\tvar newData = new QR8bitByte(data);\n\t\t\tthis.dataList.push(newData);\n\t\t\tthis.dataCache = null;\n\t\t},\n \n\t\tisDark: function(row, col) {\n\t\t\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\t\t\tthrow new Error(row + \",\" + col);\n\t\t\t}\n\t\t\treturn this.modules[row][col];\n\t\t},\n \n\t\tgetModuleCount: function() {\n\t\t\treturn this.moduleCount;\n\t\t},\n \n\t\tmake: function() {\n\t\t\t// Calculate automatically typeNumber if provided is < 1\n\t\t\tif (this.typeNumber < 1) {\n\t\t\t\tvar typeNumber = 1;\n\t\t\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n\t\t\t\t\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n \n\t\t\t\t\tvar buffer = new QRBitBuffer();\n\t\t\t\t\tvar totalDataCount = 0;\n\t\t\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t\t\t\t}\n \n\t\t\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\n\t\t\t\t\t\tvar data = this.dataList[i];\n\t\t\t\t\t\tbuffer.put(data.mode, 4);\n\t\t\t\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n\t\t\t\t\t\tdata.write(buffer);\n\t\t\t\t\t}\n\t\t\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.typeNumber = typeNumber;\n\t\t\t}\n\t\t\tthis.makeImpl(false, this.getBestMaskPattern());\n\t\t},\n \n\t\tmakeImpl: function(test, maskPattern) {\n \n\t\t\tthis.moduleCount = this.typeNumber * 4 + 17;\n\t\t\tthis.modules = new Array(this.moduleCount);\n \n\t\t\tfor (var row = 0; row < this.moduleCount; row++) {\n \n\t\t\t\tthis.modules[row] = new Array(this.moduleCount);\n \n\t\t\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\t\t\tthis.modules[row][col] = null; //(col + row) % 3;\n\t\t\t\t}\n\t\t\t}\n \n\t\t\tthis.setupPositionProbePattern(0, 0);\n\t\t\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\t\t\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\t\t\tthis.setupPositionAdjustPattern();\n\t\t\tthis.setupTimingPattern();\n\t\t\tthis.setupTypeInfo(test, maskPattern);\n \n\t\t\tif (this.typeNumber >= 7) {\n\t\t\t\tthis.setupTypeNumber(test);\n\t\t\t}\n \n\t\t\tif (this.dataCache == null) {\n\t\t\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t\t\t}\n \n\t\t\tthis.mapData(this.dataCache, maskPattern);\n\t\t},\n \n\t\tsetupPositionProbePattern: function(row, col) {\n \n\t\t\tfor (var r = -1; r <= 7; r++) {\n \n\t\t\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n \n\t\t\t\tfor (var c = -1; c <= 7; c++) {\n \n\t\t\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n \n\t\t\t\t\tif ((0 <= r && r <= 6 && (c == 0 || c == 6)) ||\n\t\t\t\t\t\t(0 <= c && c <= 6 && (r == 0 || r == 6)) ||\n\t\t\t\t\t\t(2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n \n\t\tgetBestMaskPattern: function() {\n \n\t\t\tvar minLostPoint = 0;\n\t\t\tvar pattern = 0;\n \n\t\t\tfor (var i = 0; i < 8; i++) {\n \n\t\t\t\tthis.makeImpl(true, i);\n \n\t\t\t\tvar lostPoint = QRUtil.getLostPoint(this);\n \n\t\t\t\tif (i == 0 || minLostPoint > lostPoint) {\n\t\t\t\t\tminLostPoint = lostPoint;\n\t\t\t\t\tpattern = i;\n\t\t\t\t}\n\t\t\t}\n \n\t\t\treturn pattern;\n\t\t},\n \n\t\tcreateMovieClip: function(target_mc, instance_name, depth) {\n \n\t\t\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n\t\t\tvar cs = 1;\n \n\t\t\tthis.make();\n \n\t\t\tfor (var row = 0; row < this.modules.length; row++) {\n \n\t\t\t\tvar y = row * cs;\n \n\t\t\t\tfor (var col = 0; col < this.modules[row].length; col++) {\n \n\t\t\t\t\tvar x = col * cs;\n\t\t\t\t\tvar dark = this.modules[row][col];\n \n\t\t\t\t\tif (dark) {\n\t\t\t\t\t\tqr_mc.beginFill(0, 100);\n\t\t\t\t\t\tqr_mc.moveTo(x, y);\n\t\t\t\t\t\tqr_mc.lineTo(x + cs, y);\n\t\t\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n\t\t\t\t\t\tqr_mc.lineTo(x, y + cs);\n\t\t\t\t\t\tqr_mc.endFill();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n \n\t\t\treturn qr_mc;\n\t\t},\n \n\t\tsetupTimingPattern: function() {\n \n\t\t\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\t\t\tif (this.modules[r][6] != null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.modules[r][6] = (r % 2 == 0);\n\t\t\t}\n \n\t\t\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\t\t\tif (this.modules[6][c] != null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.modules[6][c] = (c % 2 == 0);\n\t\t\t}\n\t\t},\n \n\t\tsetupPositionAdjustPattern: function() {\n \n\t\t\tvar pos = QRUtil.getPatternPosition(this.typeNumber);\n \n\t\t\tfor (var i = 0; i < pos.length; i++) {\n \n\t\t\t\tfor (var j = 0; j < pos.length; j++) {\n \n\t\t\t\t\tvar row = pos[i];\n\t\t\t\t\tvar col = pos[j];\n \n\t\t\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n \n\t\t\t\t\tfor (var r = -2; r <= 2; r++) {\n \n\t\t\t\t\t\tfor (var c = -2; c <= 2; c++) {\n \n\t\t\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2 ||\n\t\t\t\t\t\t\t\t(r == 0 && c == 0)) {\n\t\t\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n \n\t\tsetupTypeNumber: function(test) {\n \n\t\t\tvar bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n \n\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\tvar mod = (!test && ((bits >> i) & 1) == 1);\n\t\t\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t\t\t}\n \n\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\tvar mod = (!test && ((bits >> i) & 1) == 1);\n\t\t\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t\t\t}\n\t\t},\n \n\t\tsetupTypeInfo: function(test, maskPattern) {\n \n\t\t\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\t\t\tvar bits = QRUtil.getBCHTypeInfo(data);\n \n\t\t\t// vertical\t\t\n\t\t\tfor (var i = 0; i < 15; i++) {\n \n\t\t\t\tvar mod = (!test && ((bits >> i) & 1) == 1);\n \n\t\t\t\tif (i < 6) {\n\t\t\t\t\tthis.modules[i][8] = mod;\n\t\t\t\t} else if (i < 8) {\n\t\t\t\t\tthis.modules[i + 1][8] = mod;\n\t\t\t\t} else {\n\t\t\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t\t\t}\n\t\t\t}\n \n\t\t\t// horizontal\n\t\t\tfor (var i = 0; i < 15; i++) {\n \n\t\t\t\tvar mod = (!test && ((bits >> i) & 1) == 1);\n \n\t\t\t\tif (i < 8) {\n\t\t\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t\t\t} else if (i < 9) {\n\t\t\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t\t\t} else {\n\t\t\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t\t\t}\n\t\t\t}\n \n\t\t\t// fixed module\n\t\t\tthis.modules[this.moduleCount - 8][8] = (!test);\n \n\t\t},\n \n\t\tmapData: function(data, maskPattern) {\n \n\t\t\tvar inc = -1;\n\t\t\tvar row = this.moduleCount - 1;\n\t\t\tvar bitIndex = 7;\n\t\t\tvar byteIndex = 0;\n \n\t\t\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n \n\t\t\t\tif (col == 6) col--;\n \n\t\t\t\twhile (true) {\n \n\t\t\t\t\tfor (var c = 0; c < 2; c++) {\n \n\t\t\t\t\t\tif (this.modules[row][col - c] == null) {\n \n\t\t\t\t\t\t\tvar dark = false;\n \n\t\t\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\t\t\tdark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t\t\t}\n \n\t\t\t\t\t\t\tvar mask = QRUtil.getMask(maskPattern, row, col - c);\n \n\t\t\t\t\t\t\tif (mask) {\n\t\t\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t\t\t}\n \n\t\t\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\t\t\tbitIndex--;\n \n\t\t\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n \n\t\t\t\t\trow += inc;\n \n\t\t\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\t\t\trow -= inc;\n\t\t\t\t\t\tinc = -inc;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n \n\t\t}\n \n\t};\n \n\tQRCode.PAD0 = 0xEC;\n\tQRCode.PAD1 = 0x11;\n \n\tQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n \n\t\tvar rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n \n\t\tvar buffer = new QRBitBuffer();\n \n\t\tfor (var i = 0; i < dataList.length; i++) {\n\t\t\tvar data = dataList[i];\n\t\t\tbuffer.put(data.mode, 4);\n\t\t\tbuffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n\t\t\tdata.write(buffer);\n\t\t}\n \n\t\t// calc num max data.\n\t\tvar totalDataCount = 0;\n\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t}\n \n\t\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\t\tthrow new Error(\"code length overflow. (\" +\n\t\t\t\tbuffer.getLengthInBits() +\n\t\t\t\t\">\" +\n\t\t\t\ttotalDataCount * 8 +\n\t\t\t\t\")\");\n\t\t}\n \n\t\t// end code\n\t\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\t\tbuffer.put(0, 4);\n\t\t}\n \n\t\t// padding\n\t\twhile (buffer.getLengthInBits() % 8 != 0) {\n\t\t\tbuffer.putBit(false);\n\t\t}\n \n\t\t// padding\n\t\twhile (true) {\n \n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuffer.put(QRCode.PAD0, 8);\n \n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuffer.put(QRCode.PAD1, 8);\n\t\t}\n \n\t\treturn QRCode.createBytes(buffer, rsBlocks);\n\t}\n \n\tQRCode.createBytes = function(buffer, rsBlocks) {\n \n\t\tvar offset = 0;\n \n\t\tvar maxDcCount = 0;\n\t\tvar maxEcCount = 0;\n \n\t\tvar dcdata = new Array(rsBlocks.length);\n\t\tvar ecdata = new Array(rsBlocks.length);\n \n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n \n\t\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n \n\t\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n \n\t\t\tdcdata[r] = new Array(dcCount);\n \n\t\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t\t}\n\t\t\toffset += dcCount;\n \n\t\t\tvar rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n\t\t\tvar rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n \n\t\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n\t\t\t\tvar modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\t\tecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\n\t\t\t}\n \n\t\t}\n \n\t\tvar totalCodeCount = 0;\n\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\ttotalCodeCount += rsBlocks[i].totalCount;\n\t\t}\n \n\t\tvar data = new Array(totalCodeCount);\n\t\tvar index = 0;\n \n\t\tfor (var i = 0; i < maxDcCount; i++) {\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\t\tif (i < dcdata[r].length) {\n\t\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n \n\t\tfor (var i = 0; i < maxEcCount; i++) {\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\t\tif (i < ecdata[r].length) {\n\t\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n \n\t\treturn data;\n \n\t}\n \n\t//---------------------------------------------------------------------\n\t// QRMode\n\t//---------------------------------------------------------------------\n \n\tvar QRMode = {\n\t\tMODE_NUMBER: 1 << 0,\n\t\tMODE_ALPHA_NUM: 1 << 1,\n\t\tMODE_8BIT_BYTE: 1 << 2,\n\t\tMODE_KANJI: 1 << 3\n\t};\n \n\t//---------------------------------------------------------------------\n\t// QRErrorCorrectLevel\n\t//---------------------------------------------------------------------\n \n\tvar QRErrorCorrectLevel = {\n\t\tL: 1,\n\t\tM: 0,\n\t\tQ: 3,\n\t\tH: 2\n\t};\n \n\t//---------------------------------------------------------------------\n\t// QRMaskPattern\n\t//---------------------------------------------------------------------\n \n\tvar QRMaskPattern = {\n\t\tPATTERN000: 0,\n\t\tPATTERN001: 1,\n\t\tPATTERN010: 2,\n\t\tPATTERN011: 3,\n\t\tPATTERN100: 4,\n\t\tPATTERN101: 5,\n\t\tPATTERN110: 6,\n\t\tPATTERN111: 7\n\t};\n \n\t//---------------------------------------------------------------------\n\t// QRUtil\n\t//---------------------------------------------------------------------\n \n\tvar QRUtil = {\n \n\t\tPATTERN_POSITION_TABLE: [\n\t\t\t[],\n\t\t\t[6, 18],\n\t\t\t[6, 22],\n\t\t\t[6, 26],\n\t\t\t[6, 30],\n\t\t\t[6, 34],\n\t\t\t[6, 22, 38],\n\t\t\t[6, 24, 42],\n\t\t\t[6, 26, 46],\n\t\t\t[6, 28, 50],\n\t\t\t[6, 30, 54],\n\t\t\t[6, 32, 58],\n\t\t\t[6, 34, 62],\n\t\t\t[6, 26, 46, 66],\n\t\t\t[6, 26, 48, 70],\n\t\t\t[6, 26, 50, 74],\n\t\t\t[6, 30, 54, 78],\n\t\t\t[6, 30, 56, 82],\n\t\t\t[6, 30, 58, 86],\n\t\t\t[6, 34, 62, 90],\n\t\t\t[6, 28, 50, 72, 94],\n\t\t\t[6, 26, 50, 74, 98],\n\t\t\t[6, 30, 54, 78, 102],\n\t\t\t[6, 28, 54, 80, 106],\n\t\t\t[6, 32, 58, 84, 110],\n\t\t\t[6, 30, 58, 86, 114],\n\t\t\t[6, 34, 62, 90, 118],\n\t\t\t[6, 26, 50, 74, 98, 122],\n\t\t\t[6, 30, 54, 78, 102, 126],\n\t\t\t[6, 26, 52, 78, 104, 130],\n\t\t\t[6, 30, 56, 82, 108, 134],\n\t\t\t[6, 34, 60, 86, 112, 138],\n\t\t\t[6, 30, 58, 86, 114, 142],\n\t\t\t[6, 34, 62, 90, 118, 146],\n\t\t\t[6, 30, 54, 78, 102, 126, 150],\n\t\t\t[6, 24, 50, 76, 102, 128, 154],\n\t\t\t[6, 28, 54, 80, 106, 132, 158],\n\t\t\t[6, 32, 58, 84, 110, 136, 162],\n\t\t\t[6, 26, 54, 82, 110, 138, 166],\n\t\t\t[6, 30, 58, 86, 114, 142, 170]\n\t\t],\n \n\t\tG15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n\t\tG18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n\t\tG15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\n \n\t\tgetBCHTypeInfo: function(data) {\n\t\t\tvar d = data << 10;\n\t\t\twhile (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t\t\td ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\n\t\t\t}\n\t\t\treturn ((data << 10) | d) ^ QRUtil.G15_MASK;\n\t\t},\n \n\t\tgetBCHTypeNumber: function(data) {\n\t\t\tvar d = data << 12;\n\t\t\twhile (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t\t\td ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\n\t\t\t}\n\t\t\treturn (data << 12) | d;\n\t\t},\n \n\t\tgetBCHDigit: function(data) {\n \n\t\t\tvar digit = 0;\n \n\t\t\twhile (data != 0) {\n\t\t\t\tdigit++;\n\t\t\t\tdata >>>= 1;\n\t\t\t}\n \n\t\t\treturn digit;\n\t\t},\n \n\t\tgetPatternPosition: function(typeNumber) {\n\t\t\treturn QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n\t\t},\n \n\t\tgetMask: function(maskPattern, i, j) {\n \n\t\t\tswitch (maskPattern) {\n \n\t\t\t\tcase QRMaskPattern.PATTERN000:\n\t\t\t\t\treturn (i + j) % 2 == 0;\n\t\t\t\tcase QRMaskPattern.PATTERN001:\n\t\t\t\t\treturn i % 2 == 0;\n\t\t\t\tcase QRMaskPattern.PATTERN010:\n\t\t\t\t\treturn j % 3 == 0;\n\t\t\t\tcase QRMaskPattern.PATTERN011:\n\t\t\t\t\treturn (i + j) % 3 == 0;\n\t\t\t\tcase QRMaskPattern.PATTERN100:\n\t\t\t\t\treturn (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n\t\t\t\tcase QRMaskPattern.PATTERN101:\n\t\t\t\t\treturn (i * j) % 2 + (i * j) % 3 == 0;\n\t\t\t\tcase QRMaskPattern.PATTERN110:\n\t\t\t\t\treturn ((i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t\t\t\tcase QRMaskPattern.PATTERN111:\n\t\t\t\t\treturn ((i * j) % 3 + (i + j) % 2) % 2 == 0;\n \n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"bad maskPattern:\" + maskPattern);\n\t\t\t}\n\t\t},\n \n\t\tgetErrorCorrectPolynomial: function(errorCorrectLength) {\n \n\t\t\tvar a = new QRPolynomial([1], 0);\n \n\t\t\tfor (var i = 0; i < errorCorrectLength; i++) {\n\t\t\t\ta = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n\t\t\t}\n \n\t\t\treturn a;\n\t\t},\n \n\t\tgetLengthInBits: function(mode, type) {\n \n\t\t\tif (1 <= type && type < 10) {\n \n\t\t\t\t// 1 - 9\n \n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase QRMode.MODE_NUMBER:\n\t\t\t\t\t\treturn 10;\n\t\t\t\t\tcase QRMode.MODE_ALPHA_NUM:\n\t\t\t\t\t\treturn 9;\n\t\t\t\t\tcase QRMode.MODE_8BIT_BYTE:\n\t\t\t\t\t\treturn 8;\n\t\t\t\t\tcase QRMode.MODE_KANJI:\n\t\t\t\t\t\treturn 8;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\"mode:\" + mode);\n\t\t\t\t}\n \n\t\t\t} else if (type < 27) {\n \n\t\t\t\t// 10 - 26\n \n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase QRMode.MODE_NUMBER:\n\t\t\t\t\t\treturn 12;\n\t\t\t\t\tcase QRMode.MODE_ALPHA_NUM:\n\t\t\t\t\t\treturn 11;\n\t\t\t\t\tcase QRMode.MODE_8BIT_BYTE:\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\tcase QRMode.MODE_KANJI:\n\t\t\t\t\t\treturn 10;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\"mode:\" + mode);\n\t\t\t\t}\n \n\t\t\t} else if (type < 41) {\n \n\t\t\t\t// 27 - 40\n \n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase QRMode.MODE_NUMBER:\n\t\t\t\t\t\treturn 14;\n\t\t\t\t\tcase QRMode.MODE_ALPHA_NUM:\n\t\t\t\t\t\treturn 13;\n\t\t\t\t\tcase QRMode.MODE_8BIT_BYTE:\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\tcase QRMode.MODE_KANJI:\n\t\t\t\t\t\treturn 12;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\"mode:\" + mode);\n\t\t\t\t}\n \n\t\t\t} else {\n\t\t\t\tthrow new Error(\"type:\" + type);\n\t\t\t}\n\t\t},\n \n\t\tgetLostPoint: function(qrCode) {\n \n\t\t\tvar moduleCount = qrCode.getModuleCount();\n \n\t\t\tvar lostPoint = 0;\n \n\t\t\t// LEVEL1\n \n\t\t\tfor (var row = 0; row < moduleCount; row++) {\n \n\t\t\t\tfor (var col = 0; col < moduleCount; col++) {\n \n\t\t\t\t\tvar sameCount = 0;\n\t\t\t\t\tvar dark = qrCode.isDark(row, col);\n \n\t\t\t\t\tfor (var r = -1; r <= 1; r++) {\n \n\t\t\t\t\t\tif (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n \n\t\t\t\t\t\tfor (var c = -1; c <= 1; c++) {\n \n\t\t\t\t\t\t\tif (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n \n\t\t\t\t\t\t\tif (r == 0 && c == 0) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n \n\t\t\t\t\t\t\tif (dark == qrCode.isDark(row + r, col + c)) {\n\t\t\t\t\t\t\t\tsameCount++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n \n\t\t\t\t\tif (sameCount > 5) {\n\t\t\t\t\t\tlostPoint += (3 + sameCount - 5);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n \n\t\t\t// LEVEL2\n \n\t\t\tfor (var row = 0; row < moduleCount - 1; row++) {\n\t\t\t\tfor (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t\t\tvar count = 0;\n\t\t\t\t\tif (qrCode.isDark(row, col)) count++;\n\t\t\t\t\tif (qrCode.isDark(row + 1, col)) count++;\n\t\t\t\t\tif (qrCode.isDark(row, col + 1)) count++;\n\t\t\t\t\tif (qrCode.isDark(row + 1, col + 1)) count++;\n\t\t\t\t\tif (count == 0 || count == 4) {\n\t\t\t\t\t\tlostPoint += 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n \n\t\t\t// LEVEL3\n \n\t\t\tfor (var row = 0; row < moduleCount; row++) {\n\t\t\t\tfor (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t\t\tif (qrCode.isDark(row, col) &&\n\t\t\t\t\t\t!qrCode.isDark(row, col + 1) &&\n\t\t\t\t\t\tqrCode.isDark(row, col + 2) &&\n\t\t\t\t\t\tqrCode.isDark(row, col + 3) &&\n\t\t\t\t\t\tqrCode.isDark(row, col + 4) &&\n\t\t\t\t\t\t!qrCode.isDark(row, col + 5) &&\n\t\t\t\t\t\tqrCode.isDark(row, col + 6)) {\n\t\t\t\t\t\tlostPoint += 40;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n \n\t\t\tfor (var col = 0; col < moduleCount; col++) {\n\t\t\t\tfor (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t\t\tif (qrCode.isDark(row, col) &&\n\t\t\t\t\t\t!qrCode.isDark(row + 1, col) &&\n\t\t\t\t\t\tqrCode.isDark(row + 2, col) &&\n\t\t\t\t\t\tqrCode.isDark(row + 3, col) &&\n\t\t\t\t\t\tqrCode.isDark(row + 4, col) &&\n\t\t\t\t\t\t!qrCode.isDark(row + 5, col) &&\n\t\t\t\t\t\tqrCode.isDark(row + 6, col)) {\n\t\t\t\t\t\tlostPoint += 40;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n \n\t\t\t// LEVEL4\n \n\t\t\tvar darkCount = 0;\n \n\t\t\tfor (var col = 0; col < moduleCount; col++) {\n\t\t\t\tfor (var row = 0; row < moduleCount; row++) {\n\t\t\t\t\tif (qrCode.isDark(row, col)) {\n\t\t\t\t\t\tdarkCount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n \n\t\t\tvar ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t\t\tlostPoint += ratio * 10;\n \n\t\t\treturn lostPoint;\n\t\t}\n \n\t};\n \n \n\t//---------------------------------------------------------------------\n\t// QRMath\n\t//---------------------------------------------------------------------\n \n\tvar QRMath = {\n \n\t\tglog: function(n) {\n \n\t\t\tif (n < 1) {\n\t\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t\t}\n \n\t\t\treturn QRMath.LOG_TABLE[n];\n\t\t},\n \n\t\tgexp: function(n) {\n \n\t\t\twhile (n < 0) {\n\t\t\t\tn += 255;\n\t\t\t}\n \n\t\t\twhile (n >= 256) {\n\t\t\t\tn -= 255;\n\t\t\t}\n \n\t\t\treturn QRMath.EXP_TABLE[n];\n\t\t},\n \n\t\tEXP_TABLE: new Array(256),\n \n\t\tLOG_TABLE: new Array(256)\n \n\t};\n \n\tfor (var i = 0; i < 8; i++) {\n\t\tQRMath.EXP_TABLE[i] = 1 << i;\n\t}\n\tfor (var i = 8; i < 256; i++) {\n\t\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^\n\t\t\tQRMath.EXP_TABLE[i - 5] ^\n\t\t\tQRMath.EXP_TABLE[i - 6] ^\n\t\t\tQRMath.EXP_TABLE[i - 8];\n\t}\n\tfor (var i = 0; i < 255; i++) {\n\t\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n\t}\n \n\t//---------------------------------------------------------------------\n\t// QRPolynomial\n\t//---------------------------------------------------------------------\n \n\tfunction QRPolynomial(num, shift) {\n \n\t\tif (num.length == undefined) {\n\t\t\tthrow new Error(num.length + \"/\" + shift);\n\t\t}\n \n\t\tvar offset = 0;\n \n\t\twhile (offset < num.length && num[offset] == 0) {\n\t\t\toffset++;\n\t\t}\n \n\t\tthis.num = new Array(num.length - offset + shift);\n\t\tfor (var i = 0; i < num.length - offset; i++) {\n\t\t\tthis.num[i] = num[i + offset];\n\t\t}\n\t}\n \n\tQRPolynomial.prototype = {\n \n\t\tget: function(index) {\n\t\t\treturn this.num[index];\n\t\t},\n \n\t\tgetLength: function() {\n\t\t\treturn this.num.length;\n\t\t},\n \n\t\tmultiply: function(e) {\n \n\t\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n \n\t\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\t\tnum[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n\t\t\t\t}\n\t\t\t}\n \n\t\t\treturn new QRPolynomial(num, 0);\n\t\t},\n \n\t\tmod: function(e) {\n \n\t\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\t\treturn this;\n\t\t\t}\n \n\t\t\tvar ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n \n\t\t\tvar num = new Array(this.getLength());\n \n\t\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\t\tnum[i] = this.get(i);\n\t\t\t}\n \n\t\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\t\tnum[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n\t\t\t}\n \n\t\t\t// recursive call\n\t\t\treturn new QRPolynomial(num, 0).mod(e);\n\t\t}\n\t};\n \n\t//---------------------------------------------------------------------\n\t// QRRSBlock\n\t//---------------------------------------------------------------------\n \n\tfunction QRRSBlock(totalCount, dataCount) {\n\t\tthis.totalCount = totalCount;\n\t\tthis.dataCount = dataCount;\n\t}\n \n\tQRRSBlock.RS_BLOCK_TABLE = [\n \n\t\t// L\n\t\t// M\n\t\t// Q\n\t\t// H\n \n\t\t// 1\n\t\t[1, 26, 19],\n\t\t[1, 26, 16],\n\t\t[1, 26, 13],\n\t\t[1, 26, 9],\n \n\t\t// 2\n\t\t[1, 44, 34],\n\t\t[1, 44, 28],\n\t\t[1, 44, 22],\n\t\t[1, 44, 16],\n \n\t\t// 3\n\t\t[1, 70, 55],\n\t\t[1, 70, 44],\n\t\t[2, 35, 17],\n\t\t[2, 35, 13],\n \n\t\t// 4\t\t\n\t\t[1, 100, 80],\n\t\t[2, 50, 32],\n\t\t[2, 50, 24],\n\t\t[4, 25, 9],\n \n\t\t// 5\n\t\t[1, 134, 108],\n\t\t[2, 67, 43],\n\t\t[2, 33, 15, 2, 34, 16],\n\t\t[2, 33, 11, 2, 34, 12],\n \n\t\t// 6\n\t\t[2, 86, 68],\n\t\t[4, 43, 27],\n\t\t[4, 43, 19],\n\t\t[4, 43, 15],\n \n\t\t// 7\t\t\n\t\t[2, 98, 78],\n\t\t[4, 49, 31],\n\t\t[2, 32, 14, 4, 33, 15],\n\t\t[4, 39, 13, 1, 40, 14],\n \n\t\t// 8\n\t\t[2, 121, 97],\n\t\t[2, 60, 38, 2, 61, 39],\n\t\t[4, 40, 18, 2, 41, 19],\n\t\t[4, 40, 14, 2, 41, 15],\n \n\t\t// 9\n\t\t[2, 146, 116],\n\t\t[3, 58, 36, 2, 59, 37],\n\t\t[4, 36, 16, 4, 37, 17],\n\t\t[4, 36, 12, 4, 37, 13],\n \n\t\t// 10\t\t\n\t\t[2, 86, 68, 2, 87, 69],\n\t\t[4, 69, 43, 1, 70, 44],\n\t\t[6, 43, 19, 2, 44, 20],\n\t\t[6, 43, 15, 2, 44, 16],\n \n\t\t// 11\n\t\t[4, 101, 81],\n\t\t[1, 80, 50, 4, 81, 51],\n\t\t[4, 50, 22, 4, 51, 23],\n\t\t[3, 36, 12, 8, 37, 13],\n \n\t\t// 12\n\t\t[2, 116, 92, 2, 117, 93],\n\t\t[6, 58, 36, 2, 59, 37],\n\t\t[4, 46, 20, 6, 47, 21],\n\t\t[7, 42, 14, 4, 43, 15],\n \n\t\t// 13\n\t\t[4, 133, 107],\n\t\t[8, 59, 37, 1, 60, 38],\n\t\t[8, 44, 20, 4, 45, 21],\n\t\t[12, 33, 11, 4, 34, 12],\n \n\t\t// 14\n\t\t[3, 145, 115, 1, 146, 116],\n\t\t[4, 64, 40, 5, 65, 41],\n\t\t[11, 36, 16, 5, 37, 17],\n\t\t[11, 36, 12, 5, 37, 13],\n \n\t\t// 15\n\t\t[5, 109, 87, 1, 110, 88],\n\t\t[5, 65, 41, 5, 66, 42],\n\t\t[5, 54, 24, 7, 55, 25],\n\t\t[11, 36, 12],\n \n\t\t// 16\n\t\t[5, 122, 98, 1, 123, 99],\n\t\t[7, 73, 45, 3, 74, 46],\n\t\t[15, 43, 19, 2, 44, 20],\n\t\t[3, 45, 15, 13, 46, 16],\n \n\t\t// 17\n\t\t[1, 135, 107, 5, 136, 108],\n\t\t[10, 74, 46, 1, 75, 47],\n\t\t[1, 50, 22, 15, 51, 23],\n\t\t[2, 42, 14, 17, 43, 15],\n \n\t\t// 18\n\t\t[5, 150, 120, 1, 151, 121],\n\t\t[9, 69, 43, 4, 70, 44],\n\t\t[17, 50, 22, 1, 51, 23],\n\t\t[2, 42, 14, 19, 43, 15],\n \n\t\t// 19\n\t\t[3, 141, 113, 4, 142, 114],\n\t\t[3, 70, 44, 11, 71, 45],\n\t\t[17, 47, 21, 4, 48, 22],\n\t\t[9, 39, 13, 16, 40, 14],\n \n\t\t// 20\n\t\t[3, 135, 107, 5, 136, 108],\n\t\t[3, 67, 41, 13, 68, 42],\n\t\t[15, 54, 24, 5, 55, 25],\n\t\t[15, 43, 15, 10, 44, 16],\n \n\t\t// 21\n\t\t[4, 144, 116, 4, 145, 117],\n\t\t[17, 68, 42],\n\t\t[17, 50, 22, 6, 51, 23],\n\t\t[19, 46, 16, 6, 47, 17],\n \n\t\t// 22\n\t\t[2, 139, 111, 7, 140, 112],\n\t\t[17, 74, 46],\n\t\t[7, 54, 24, 16, 55, 25],\n\t\t[34, 37, 13],\n \n\t\t// 23\n\t\t[4, 151, 121, 5, 152, 122],\n\t\t[4, 75, 47, 14, 76, 48],\n\t\t[11, 54, 24, 14, 55, 25],\n\t\t[16, 45, 15, 14, 46, 16],\n \n\t\t// 24\n\t\t[6, 147, 117, 4, 148, 118],\n\t\t[6, 73, 45, 14, 74, 46],\n\t\t[11, 54, 24, 16, 55, 25],\n\t\t[30, 46, 16, 2, 47, 17],\n \n\t\t// 25\n\t\t[8, 132, 106, 4, 133, 107],\n\t\t[8, 75, 47, 13, 76, 48],\n\t\t[7, 54, 24, 22, 55, 25],\n\t\t[22, 45, 15, 13, 46, 16],\n \n\t\t// 26\n\t\t[10, 142, 114, 2, 143, 115],\n\t\t[19, 74, 46, 4, 75, 47],\n\t\t[28, 50, 22, 6, 51, 23],\n\t\t[33, 46, 16, 4, 47, 17],\n \n\t\t// 27\n\t\t[8, 152, 122, 4, 153, 123],\n\t\t[22, 73, 45, 3, 74, 46],\n\t\t[8, 53, 23, 26, 54, 24],\n\t\t[12, 45, 15, 28, 46, 16],\n \n\t\t// 28\n\t\t[3, 147, 117, 10, 148, 118],\n\t\t[3, 73, 45, 23, 74, 46],\n\t\t[4, 54, 24, 31, 55, 25],\n\t\t[11, 45, 15, 31, 46, 16],\n \n\t\t// 29\n\t\t[7, 146, 116, 7, 147, 117],\n\t\t[21, 73, 45, 7, 74, 46],\n\t\t[1, 53, 23, 37, 54, 24],\n\t\t[19, 45, 15, 26, 46, 16],\n \n\t\t// 30\n\t\t[5, 145, 115, 10, 146, 116],\n\t\t[19, 75, 47, 10, 76, 48],\n\t\t[15, 54, 24, 25, 55, 25],\n\t\t[23, 45, 15, 25, 46, 16],\n \n\t\t// 31\n\t\t[13, 145, 115, 3, 146, 116],\n\t\t[2, 74, 46, 29, 75, 47],\n\t\t[42, 54, 24, 1, 55, 25],\n\t\t[23, 45, 15, 28, 46, 16],\n \n\t\t// 32\n\t\t[17, 145, 115],\n\t\t[10, 74, 46, 23, 75, 47],\n\t\t[10, 54, 24, 35, 55, 25],\n\t\t[19, 45, 15, 35, 46, 16],\n \n\t\t// 33\n\t\t[17, 145, 115, 1, 146, 116],\n\t\t[14, 74, 46, 21, 75, 47],\n\t\t[29, 54, 24, 19, 55, 25],\n\t\t[11, 45, 15, 46, 46, 16],\n \n\t\t// 34\n\t\t[13, 145, 115, 6, 146, 116],\n\t\t[14, 74, 46, 23, 75, 47],\n\t\t[44, 54, 24, 7, 55, 25],\n\t\t[59, 46, 16, 1, 47, 17],\n \n\t\t// 35\n\t\t[12, 151, 121, 7, 152, 122],\n\t\t[12, 75, 47, 26, 76, 48],\n\t\t[39, 54, 24, 14, 55, 25],\n\t\t[22, 45, 15, 41, 46, 16],\n \n\t\t// 36\n\t\t[6, 151, 121, 14, 152, 122],\n\t\t[6, 75, 47, 34, 76, 48],\n\t\t[46, 54, 24, 10, 55, 25],\n\t\t[2, 45, 15, 64, 46, 16],\n \n\t\t// 37\n\t\t[17, 152, 122, 4, 153, 123],\n\t\t[29, 74, 46, 14, 75, 47],\n\t\t[49, 54, 24, 10, 55, 25],\n\t\t[24, 45, 15, 46, 46, 16],\n \n\t\t// 38\n\t\t[4, 152, 122, 18, 153, 123],\n\t\t[13, 74, 46, 32, 75, 47],\n\t\t[48, 54, 24, 14, 55, 25],\n\t\t[42, 45, 15, 32, 46, 16],\n \n\t\t// 39\n\t\t[20, 147, 117, 4, 148, 118],\n\t\t[40, 75, 47, 7, 76, 48],\n\t\t[43, 54, 24, 22, 55, 25],\n\t\t[10, 45, 15, 67, 46, 16],\n \n\t\t// 40\n\t\t[19, 148, 118, 6, 149, 119],\n\t\t[18, 75, 47, 31, 76, 48],\n\t\t[34, 54, 24, 34, 55, 25],\n\t\t[20, 45, 15, 61, 46, 16]\n\t];\n \n\tQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n \n\t\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n \n\t\tif (rsBlock == undefined) {\n\t\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t\t}\n \n\t\tvar length = rsBlock.length / 3;\n \n\t\tvar list = new Array();\n \n\t\tfor (var i = 0; i < length; i++) {\n \n\t\t\tvar count = rsBlock[i * 3 + 0];\n\t\t\tvar totalCount = rsBlock[i * 3 + 1];\n\t\t\tvar dataCount = rsBlock[i * 3 + 2];\n \n\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\tlist.push(new QRRSBlock(totalCount, dataCount));\n\t\t\t}\n\t\t}\n \n\t\treturn list;\n\t}\n \n\tQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n \n\t\tswitch (errorCorrectLevel) {\n\t\t\tcase QRErrorCorrectLevel.L:\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\t\t\tcase QRErrorCorrectLevel.M:\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\t\t\tcase QRErrorCorrectLevel.Q:\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\t\t\tcase QRErrorCorrectLevel.H:\n\t\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n \n\t//---------------------------------------------------------------------\n\t// QRBitBuffer\n\t//---------------------------------------------------------------------\n \n\tfunction QRBitBuffer() {\n\t\tthis.buffer = new Array();\n\t\tthis.length = 0;\n\t}\n \n\tQRBitBuffer.prototype = {\n \n\t\tget: function(index) {\n\t\t\tvar bufIndex = Math.floor(index / 8);\n\t\t\treturn ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) == 1;\n\t\t},\n \n\t\tput: function(num, length) {\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tthis.putBit(((num >>> (length - i - 1)) & 1) == 1);\n\t\t\t}\n\t\t},\n \n\t\tgetLengthInBits: function() {\n\t\t\treturn this.length;\n\t\t},\n \n\t\tputBit: function(bit) {\n \n\t\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\t\tif (this.buffer.length <= bufIndex) {\n\t\t\t\tthis.buffer.push(0);\n\t\t\t}\n \n\t\t\tif (bit) {\n\t\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\n\t\t\t}\n \n\t\t\tthis.length++;\n\t\t}\n\t};\n \n\t//---------------------------------------------------------------------\n\t// Support Chinese\n\t//---------------------------------------------------------------------\n\tfunction utf16To8(text) {\n\t\tvar result = '';\n\t\tvar c;\n\t\tfor (var i = 0; i < text.length; i++) {\n\t\t\tc = text.charCodeAt(i);\n\t\t\tif (c >= 0x0001 && c <= 0x007F) {\n\t\t\t\tresult += text.charAt(i);\n\t\t\t} else if (c > 0x07FF) {\n\t\t\t\tresult += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n\t\t\t\tresult += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n\t\t\t\tresult += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n\t\t\t} else {\n\t\t\t\tresult += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n\t\t\t\tresult += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n \n\tuQRCode = {\n \n\t\terrorCorrectLevel: QRErrorCorrectLevel,\n \n\t\tdefaults: {\n\t\t\tsize: 354,\n\t\t\tmargin: 0,\n\t\t\tbackgroundColor: '#ffffff',\n\t\t\tforegroundColor: '#000000',\n\t\t\tfileType: 'png', // 'jpg', 'png'\n\t\t\terrorCorrectLevel: QRErrorCorrectLevel.H,\n\t\t\ttypeNumber: -1\n\t\t},\n \n\t\tmake: function(options) {\n\t\t\treturn new Promise((reslove, reject) => {\n\t\t\t\tvar defaultOptions = {\n\t\t\t\t\tcanvasId: options.canvasId,\n\t\t\t\t\tcomponentInstance: options.componentInstance,\n\t\t\t\t\ttext: options.text,\n\t\t\t\t\tsize: this.defaults.size,\n\t\t\t\t\tmargin: this.defaults.margin,\n\t\t\t\t\tbackgroundColor: this.defaults.backgroundColor,\n\t\t\t\t\tforegroundColor: this.defaults.foregroundColor,\n\t\t\t\t\tfileType: this.defaults.fileType,\n\t\t\t\t\terrorCorrectLevel: this.defaults.errorCorrectLevel,\n\t\t\t\t\ttypeNumber: this.defaults.typeNumber\n\t\t\t\t};\n\t\t\t\tif (options) {\n\t\t\t\t\tfor (var i in options) {\n\t\t\t\t\t\tdefaultOptions[i] = options[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toptions = defaultOptions;\n\t\t\t\tif (!options.canvasId) {\n\t\t\t\t\tconsole.error('uQRCode: Please set canvasId!');\n\t\t\t\t\treturn;\n\t\t\t\t}\n \n\t\t\t\tfunction createCanvas() {\n\t\t\t\t\tvar qrcode = new QRCode(options.typeNumber, options.errorCorrectLevel);\n\t\t\t\t\tqrcode.addData(utf16To8(options.text));\n\t\t\t\t\tqrcode.make();\n \n\t\t\t\t\tvar ctx = uni.createCanvasContext(options.canvasId, options.componentInstance);\n\t\t\t\t\tctx.setFillStyle(options.backgroundColor);\n\t\t\t\t\tctx.fillRect(0, 0, options.size, options.size);\n \n\t\t\t\t\tvar tileW = (options.size - options.margin * 2) / qrcode.getModuleCount();\n\t\t\t\t\tvar tileH = tileW;\n \n\t\t\t\t\tfor (var row = 0; row < qrcode.getModuleCount(); row++) {\n\t\t\t\t\t\tfor (var col = 0; col < qrcode.getModuleCount(); col++) {\n\t\t\t\t\t\t\tvar style = qrcode.isDark(row, col) ? options.foregroundColor : options.backgroundColor;\n\t\t\t\t\t\t\tctx.setFillStyle(style);\n\t\t\t\t\t\t\tvar x = Math.round(col * tileW) + options.margin;\n\t\t\t\t\t\t\tvar y = Math.round(row * tileH) + options.margin;\n\t\t\t\t\t\t\tvar w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);\n\t\t\t\t\t\t\tvar h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW);\n\t\t\t\t\t\t\tctx.fillRect(x, y, w, h);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n \n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tctx.draw(false, (function() {\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\tuni.canvasToTempFilePath({\n\t\t\t\t\t\t\t\t\tcanvasId: options.canvasId,\n\t\t\t\t\t\t\t\t\tfileType: options.fileType,\n\t\t\t\t\t\t\t\t\twidth: options.size,\n\t\t\t\t\t\t\t\t\theight: options.size,\n\t\t\t\t\t\t\t\t\tdestWidth: options.size,\n\t\t\t\t\t\t\t\t\tdestHeight: options.size,\n\t\t\t\t\t\t\t\t\tsuccess: function(res) {\n\t\t\t\t\t\t\t\t\t\tlet resData; // 将统一为base64格式\n\t\t\t\t\t\t\t\t\t\tlet tempFilePath = res.tempFilePath; // H5为base64，其他为相对路径\n \n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n \n\n\t\t\t\t\t\t\t\t\t\tuni.getFileSystemManager().readFile({\n\t\t\t\t\t\t\t\t\t\t\tfilePath: tempFilePath,\n\t\t\t\t\t\t\t\t\t\t\tencoding: 'base64',\n\t\t\t\t\t\t\t\t\t\t\tsuccess: res => {\n\t\t\t\t\t\t\t\t\t\t\t\tresData = 'data:image/png;base64,' + res.data;\n\t\t\t\t\t\t\t\t\t\t\t\toptions.success && options.success(resData);\n\t\t\t\t\t\t\t\t\t\t\t\treslove(resData);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfail: function(error) {\n\t\t\t\t\t\t\t\t\t\toptions.fail && options.fail(error);\n\t\t\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tcomplete: function(res) {\n\t\t\t\t\t\t\t\t\t\toptions.complete && options.complete(res);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, options.componentInstance);\n\t\t\t\t\t\t\t}, options.text.length + 100);\n\t\t\t\t\t\t})());\n\t\t\t\t\t}, 150);\n\t\t\t\t}\n \n\t\t\t\tcreateCanvas();\n\t\t\t});\n\t\t}\n\t}\n \n})()\n \nexport default uQRCode\n \n "],"sourceRoot":""}